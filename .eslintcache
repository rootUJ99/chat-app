[{"/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/index.js":"1","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/App.js":"2","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/reportWebVitals.js":"3","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/pages/Auth/index.js":"4","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/hooks/index.js":"5","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/components/Button/index.js":"6","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/components/Input/index.js":"7","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/pages/Chat/index.js":"8","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/components/List/index.js":"9","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/components/Card/index.js":"10","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/components/Conversation/index.js":"11","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/components/Message/index.js":"12","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/utils/index.js":"13"},{"size":500,"mtime":1608713408651,"results":"14","hashOfConfig":"15"},{"size":758,"mtime":1609568235591,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1608713408653,"results":"17","hashOfConfig":"15"},{"size":2767,"mtime":1609571840403,"results":"18","hashOfConfig":"15"},{"size":840,"mtime":1609419762992,"results":"19","hashOfConfig":"15"},{"size":205,"mtime":1609171759414,"results":"20","hashOfConfig":"15"},{"size":328,"mtime":1609171759566,"results":"21","hashOfConfig":"15"},{"size":2347,"mtime":1609583380428,"results":"22","hashOfConfig":"15"},{"size":324,"mtime":1609420392548,"results":"23","hashOfConfig":"15"},{"size":283,"mtime":1609420672365,"results":"24","hashOfConfig":"15"},{"size":3008,"mtime":1609661081915,"results":"25","hashOfConfig":"15"},{"size":560,"mtime":1609511872186,"results":"26","hashOfConfig":"15"},{"size":230,"mtime":1609175120156,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ym8dpe",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/index.js",[],["61","62"],"/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/App.js",["63"],"import './App.css';\nimport Auth from './pages/Auth';\nimport Chat from './pages/Chat';\nimport {useState, useEffect} from 'react';\nimport {useLocalStorage} from './hooks';\nimport io from 'socket.io-client';\nconst App = () => {\n  const [userData] = useLocalStorage('token');\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n  if (userData?.token) {\n    const socketIO = io('',{\n      multiplex: false,\n      transports: ['polling', 'xhr-polling', 'jsonp-polling']\n    });\n    setSocket(socketIO);\n  }\n  return () => { \n    console.log('closing socket connection');\n    socket?.close();\n   }\n}, [setSocket]);\n\n  return (\n    <div className=\"app\">\n      {userData?.token ? <Chat socket={socket}/> : <Auth/>}\n    </div>\n  )\n}\n\nexport default App;\n","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/reportWebVitals.js",[],"/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/pages/Auth/index.js",["64"],"import {useLocalStorage} from '../../hooks';\nimport {useState} from 'react';\nimport './styles.css';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\n\nconst Login = () => {\n  const [mode, setMode] = useState('LOGIN');\n  const [token, setToken] = useLocalStorage('token', '');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [authForm, setAuthForm] = useState({\n    username: '',\n    password: '',\n  });\n  const switchMode = () => mode==='LOGIN' ? 'REGISTER' : 'LOGIN';\n  const clearMessages = () => {\n    setSuccessMessage('');\n    setErrorMessage('');\n  }\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if(mode=== 'LOGIN') handleSubmitLogin();\n    if(mode=== 'REGISTER') handleSubmitRegister();\n  }\n\n  const handleSubmitLogin = async() => {\n    try {\n      const raw = await fetch('/api/user/token', {\n        headers: {'Content-Type': 'application/json'},\n        method: 'POST',\n        body: JSON.stringify(authForm), \n      });\n      if (!raw.ok && raw.status === 400) throw await raw.json();\n      const data = await raw.json();\n      setToken(data);\n      setErrorMessage('');\n      window.location.reload();\n    } catch(err) {\n      setErrorMessage(err?.error);\n    }\n  }\n  \n  const handleSubmitRegister = async() => {\n    try {\n      const raw = await fetch('/api/user/create', {\n        headers: {'Content-Type': 'application/json'},\n        method: 'POST',\n        body: JSON.stringify(authForm), \n      });\n      if (!raw.ok && raw.status === 400) throw await raw.json();\n      const data = await raw.json();\n      setErrorMessage('');\n      setSuccessMessage(data?.message);\n    } catch(err) {\n      setErrorMessage(err?.error);\n      console.log(err)\n    }\n  }\n  \n  const handleChange = (e) => {\n    setAuthForm({\n      ...authForm,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  return (\n    <div className=\"auth-container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"auth-form\">\n        <Input name=\"username\" placeholder=\"username\" value={authForm.username} onChange={handleChange}/>\n        <Input type=\"password\" name=\"password\" placeholder=\"password\" value={authForm.password} onChange={handleChange}/>\n        { errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n        { successMessage &&<div className=\"success-message\">{successMessage}</div>}\n        <Button type=\"submit\">{mode}</Button><br/>\n        <div className=\"or-divider\">--or--</div>\n        <Button type=\"button\" onClick={()=> {\n          clearMessages();\n          setMode(switchMode());\n        }\n        }>{switchMode()}</Button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login; \n","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/hooks/index.js",[],"/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/components/Button/index.js",[],"/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/components/Input/index.js",[],"/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/pages/Chat/index.js",["65"],"import { useState, useEffect } from 'react';\nimport { useLocalStorage } from '../../hooks';\nimport { convertToken } from '../../utils';\nimport List from '../../components/List';\nimport Conversation from '../../components/Conversation';\nimport './styles.css';\nconst Chat = ({socket}) => {\n  const [userList, setUserList] = useState([]);\n  const [userData, setUserData] = useLocalStorage('token');\n  const [contact, setContact] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const userDetails = convertToken(userData?.token);\n;\n  useEffect(()=>{\n    (async ()=>{\n      try {\n        const rawList = await fetch('/api/user/list',{\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${userData?.token}`\n          }\n        });\n        const list = await rawList.json();\n        console.log(list);\n        setUserList(list)\n      } catch(error) {\n        console.log(error);\n      }\n    })();\n  },[]);\n  \n  const handleItemClick = async (listItem) => {\n    const body = {\n     members: [userDetails?.id, listItem?._id] \n    }\n\n    try {\n      const rawChat = await fetch('/api/chat/load',{\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${userData?.token}`\n        },\n        method: 'POST',\n        body: JSON.stringify(body),\n      });\n      const chat = await rawChat.json();\n      setContact(listItem);\n      setConversation(chat?.chat?.chat);\n      socket?.emit('create-room', chat?.chat?._id);\n    } catch(error) {\n      console.log(error);\n    }\n  }\n\n  const Logout = () => {\n    setUserData('');\n    window.location.reload();\n  }\n\n  return (\n    <div className=\"chat\">\n      <div className=\"contact-list\">\n        <h3 className=\"list-title\"> Available Contacts </h3>\n        <List \n          list={userList?.users} \n          propToShow=\"username\" \n          onItemClick={handleItemClick}\n        />\n        <div className=\"logout-section\">\n          <span>{userDetails?.username}</span> <span className=\"logout-text\" onClick={Logout}>logout</span>\n        </div>\n      </div>\n      <Conversation \n        contact={contact} \n        userDetails={userDetails}\n        socket={socket}\n        setConversation={setConversation}\n        conversation={conversation}\n      />\n    </div>\n  )\n}\n\nexport default Chat;\n","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/components/List/index.js",[],"/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/components/Card/index.js",["66"],"import React, { Children } from 'react'\nimport './styles.css';\n\nconst Card = ({title, children, onClick}) => {\n  return (\n    <div className=\"card\" onClick={onClick}>\n      {title && <h4>{title}</h4>}\n      <div>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/components/Conversation/index.js",["67","68"],"/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/components/Message/index.js",["69"],"import React from 'react'\nimport './styles.css';\nconst Message = ({ message, isSentByUser, recived}) => {\n  const background = isSentByUser ? `var(--sender-message)`: `var(--reciver-message)`;\n  const alignSelf = isSentByUser ? 'flex-end': 'flex-start';\n  const checkImgSrc = recived ? '/double-check.svg': '/check.svg';\n  return (\n    <div style={{\n      background,\n      alignSelf\n      }} className=\"message\">\n      {message}\n      { isSentByUser &&\n        <img src={checkImgSrc} className=\"check-img\"/>\n      }\n    </div>\n  )\n}\n\nexport default Message; \n","/Users/ujwal/Desktop/UJwal/projects/chat-app-repo/src/utils/index.js",["70","71"],"export const convertToken = (token) => {\n    if(token) {\n      const [algo, userInfo] = token?.split('.');\n      if (userInfo){\n        return JSON.parse(atob(userInfo))\n      }\n    }\n  }\n  \n  export default {\n    convertToken\n  }",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":22,"column":4,"nodeType":"78","endLine":22,"endColumn":15,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":9,"column":10,"nodeType":"82","messageId":"83","endLine":9,"endColumn":15},{"ruleId":"76","severity":1,"message":"84","line":30,"column":5,"nodeType":"78","endLine":30,"endColumn":7,"suggestions":"85"},{"ruleId":"80","severity":1,"message":"86","line":1,"column":17,"nodeType":"82","messageId":"83","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"87","line":31,"column":5,"nodeType":"78","endLine":31,"endColumn":36,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":96,"column":9,"nodeType":"91","endLine":96,"endColumn":62},{"ruleId":"89","severity":1,"message":"90","line":14,"column":9,"nodeType":"91","endLine":14,"endColumn":55},{"ruleId":"80","severity":1,"message":"92","line":3,"column":14,"nodeType":"82","messageId":"83","endLine":3,"endColumn":18},{"ruleId":"93","severity":1,"message":"94","line":10,"column":3,"nodeType":"95","endLine":12,"endColumn":4},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'socket' and 'userData?.token'. Either include them or remove the dependency array.","ArrayExpression",["98"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'userData?.token'. Either include it or remove the dependency array.",["99"],"'Children' is defined but never used.","React Hook useEffect has a missing dependency: 'userDetails?.id'. Either include it or remove the dependency array.",["100"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'algo' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [setSocket, socket, userData?.token]",{"range":"107","text":"108"},"Update the dependencies array to be: [userData?.token]",{"range":"109","text":"110"},"Update the dependencies array to be: [setIsTyping, isTyping, socket, userDetails?.id]",{"range":"111","text":"112"},[608,619],"[setSocket, socket, userData?.token]",[974,976],"[userData?.token]",[1117,1148],"[setIsTyping, isTyping, socket, userDetails?.id]"]